---
- name: add repository ppa:openjdk-r/ppa
  apt_repository: repo='ppa:openjdk-r/ppa' update_cache=yes state=present

- name: Install packages
  apt: name={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
    - git
    - maven
    - openjdk-8-jdk
    - openbox
    - tint2
    - x11-xkb-utils

- name: Install tigervnc
  apt: deb={{ tigervnc_url }}

- name: Copy bash script with kepler env variables
  copy: src=kepler-env.sh dest=/etc/profile.d/kepler-env.sh mode="u=rwx,g=rx,o=rx"

- name: Update java alternatives
  command: update-java-alternatives -s $JAVA
  environment:
    JAVA: "{{ javadir }}"

- name: Install Kepler 2.5
  unarchive: src={{ kepler_url }} dest=/usr/local copy=no keep_newer=yes

- name: git clone kepler indigo repos
  git: repo={{ item.repo }} dest={{ item.dest }} version={{ item.ver }} clone=yes
  with_items:
    - { repo: "https://github.com/indigo-dc/indigoclient.git", dest: "/usr/local/indigoclient", ver: "v1.0.1" }
    - { repo: "https://github.com/indigo-dc/indigokepler.git", dest: "/usr/local/indigokepler", ver: "v1.0.1" }

- name: mvn install indigoclient
  command: mvn install chdir=/usr/local/indigoclient
  environment:
    JAVA: "{{ javadir }}"
    JAVA_HOME: "{{ java_home }}"
    KEPLER: "{{ kepler_home }}"
    PATH: "{{ ansible_env.PATH }}:{{ kepler_home }}"

- name: mvn initialize indigokepler
  command: mvn initialize chdir=/usr/local/indigokepler
  environment:
    JAVA: "{{ javadir }}"
    JAVA_HOME: "{{ java_home }}"
    KEPLER: "{{ kepler_home }}"
    PATH: "{{ ansible_env.PATH }}:{{ kepler_home }}"

- name: mvn install indigokepler
  command: mvn install chdir=/usr/local/indigokepler
  environment:
    JAVA: "{{ javadir }}"
    JAVA_HOME: "{{ java_home }}"
    KEPLER: "{{ kepler_home }}"
    PATH: "{{ ansible_env.PATH }}:{{ kepler_home }}"

- name: mvn dependency indigokepler
  command: mvn dependency:copy-dependencies -DoutputDirectory=target/indigo/lib/jar -DexcludeArtifactIds=ptolemy chdir=/usr/local/indigokepler
  environment:
    JAVA: "{{ javadir }}"
    JAVA_HOME: "{{ java_home }}"
    KEPLER: "{{ kepler_home }}"
    PATH: "{{ ansible_env.PATH }}:{{ kepler_home }}"

- name: copy target/indigo to $KEPLER
  command: /bin/cp -r /usr/local/indigokepler/target/indigo {{ kepler_home }}/
  environment:
    KEPLER: "{{ kepler_home }}"

- name: insert indigo into kepler modules
  lineinfile: dest={{ kepler_home }}/build-area/modules.txt insertbefore=BOF line=indigo

- name: add user {{ user }}
  user: name={{ user }} password={{ passcript }} shell=/bin/bash groups=adm,sudo system=yes

- name: make user directories
  file: path={{ item }} state=directory owner={{ user }} group={{ user }} mode=0700
  with_items:
    - /home/{{ user }}/.vnc
    - /home/{{ user }}/.ssh
    - /home/{{ user }}/.config/openbox

- name: copy Openbox configuration files
  copy: src={{ item.src }} dest={{ item.dst }} owner={{ user }} group={{ user }} mode="u=rw"
  with_items:
    - { src: "openbox_autostart", dst: "/home/{{ user }}/.config/openbox/autostart" }
    - { src: "openbox_menu.xml", dst: "/home/{{ user }}/.config/openbox/menu.xml" }

- name: copy executable VNC's xstartup file
  copy: src=vnc_xstartup dest=/home/{{ user }}/.vnc/xstartup owner={{ user }} group={{ user }} mode="u=rwx,g=rx,o=rx"

- name: copy pre-defined VNC password with 600 mode
  copy: src=vnc_passwd dest=/home/{{ user }}/.vnc/passwd owner={{ user }} group={{ user }} mode="u=rw,g=,o="

- name: copy indigo workflows
  command: cp -r /usr/local/indigokepler/workflows/ophidia /home/{{ user }}

- name: copy default demo workflow
  command: cp -r /usr/local/indigokepler/workflows/ophidia/pilot/OphidiaPilot.kar /home/{{ user }}/OphidiaClimateDocker.kar

- name: copy templates
  template: src={{ item.src }} dest={{ item.dst }} owner={{ user }} group={{ user }} mode="u=rw"
  with_items:
    - { src: "ssh_config.j2", dst: "/home/{{ user }}/.ssh/config" }
    - { src: "oph-credentials.txt.j2", dst: "/home/{{ user }}/ophidia/oph-credentials.txt" }

- name: configure vnc service
  lineinfile: dest=/etc/default/vncservers create=yes line="VNCSERVERS='0:ubuntu'"

- name: start and enable vnc service
  service: name=vncserver state=started enabled=yes
